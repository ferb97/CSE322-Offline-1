package ClientPackage;2

import ObjectPackage.Message;
import util.NetworkUtil;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class WriteThreadClient implements Runnable{
    private Thread thr;
    private NetworkUtil networkUtil;
    String name;

    public WriteThreadClient(NetworkUtil networkUtil, String name) {
        this.networkUtil = networkUtil;
        this.name = name;
        this.thr = new Thread(this);
        thr.start();
    }

    public void run() {
        try {
            Scanner input = new Scanner(System.in);
            while (true) {
                System.out.println("1 - Show All the Clients");
                System.out.println("2 - Show All Files of Mine");
                System.out.println("3 - Show ALl Public Files of Other Clients");
                System.out.println("4 - Upload a File");
                System.out.println("7 - Exit");
                System.out.print("Enter an Option: ");
                int option = input.nextInt();
                if(option == 7){
                    networkUtil.write("Exiting");
                    networkUtil.closeConnection();
                    System.exit(0);
                }
                else if(option == 1){
                    networkUtil.write("List of Clients");
                    String clientListString = (String) networkUtil.read();
                    System.out.println(clientListString);
                }
                else if(option == 2){
                    networkUtil.write("List of All Files of Mine");
                    String clientListString = (String) networkUtil.read();
                    System.out.println(clientListString);
                }
                else if(option == 3){
                    networkUtil.write("List of All Public Files of Other Clients");
                    String clientListString = (String) networkUtil.read();
                    System.out.println(clientListString);
                }
                else if(option == 4){
                    String fileName = "";
                    File file;
                    while(true){
                        System.out.print("Enter File Name: ");
                        fileName = input.nextLine();
                        file = new File(fileName);
                        if(!file.exists()){
                            System.out.println(fileName + " does not exist in the current directory\nEnter an existing file name");
                        }
                        else{
                            break;
                        }
                    }
                    long fileSize = file.length();
                    Message message = new Message(fileName, "Upload");
                    message.setFileSize(fileSize);
                    System.out.println("File Size: " + fileSize);
                    networkUtil.write(message);
                    Object object = networkUtil.read();
                    Message message1 = (Message) object;
                    if(message1.getText().equalsIgnoreCase("You can start file transmission")){
                        System.out.println("Chunk Size: " + message1.getChunkSize() + ", File ID: " + message1.getFileID());
                    }
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        } finally {
            try {
                networkUtil.closeConnection();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
